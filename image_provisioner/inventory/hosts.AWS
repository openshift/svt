# vim:ft=ansible:
localhost ansible_connection=local ansible_python_interpreter=/usr/bin/python

[all:vars]
# AWS vars
aws_access_key=
aws_secret_key=
region=us-west-2
key_name=
group_id=
# for ena to be supported, the instance_type needs to be a C5, F1, G3, H1, I3, M5, P2, P3, R4, X1 or m4.16xlarge
#instance_type=m5.large
instance_type=m4.xlarge
extra_tags=
vpc_subnet_id=
base_image=
instance_tag=
volume_size=
# repo install
rhel_int_repo_hostname=
ansible_url=
# os kickstart
ssh_repo=
# collectd install
config_type=ose
collectd_interval=10
collectd_status=started
graphite_host=
graphite_prefix=ose
# clone repos
github_token=
# pbench config
pbench_internal_hostname=pbench\..*com$
pbench_alternate_hostname=
# docker config
# sda2 for openstack, sdb/xvdb for ec2
config_repo=
docker_login=no
docker_storage_device=/dev/xvdb
# for 5 series ena enabled instances
#docker_storage_device=/dev/nvme1n1
docker_storage_vgname=docker_vg
docker_storage_driver=overlay2
# docker_storage_mount_path should be: "/var/lib/docker" as of BZ 1568450
docker_storage_mount_path=/var/lib/docker
container_root_lv_mount_path=/var/lib/docker
# updates the kernel if set to true
update_kernel=false
# URL to pull the latest kernel
kernel_url=https://example.com
# aos-ansible
aos_ansible_path=/root/aos-ansible
aos_ansible_inventory=/root/aos-ansible/inventory/hosts
puddle_url=
# required for authentication for new registry registry.reg-aws.openshift.com:443
registry_name=
registry_username=
registry_password=
# comment image_version for 'latest'
image_version=v3.3.0.30
# image naming
# set openshift_version to the rpm version, sometimes with a trailing -N
openshift_version=3.3.0.30-1
# Set this variable to delete the oldest file when creating a new image.
target_directory=
# set atomic to True for atomic image
atomic=False
# To update RHEL redhat-release-server, set to true
update_rhel_server=False
# cri-o
crio=False
crio_copy_images=False
crio_registry=registry.access.redhat.com
image_repository=
crio_system_container=False 
# multipath-blacklist
multipath_blacklist=False
# pbench scrape binaries
binary_url=https://github.com/redhat-performance/pbench-analyzer/releases/download/v0.1-alpha/
# scale-ci results github token
scale_ci_results_token=
