---
- block:
   - name: customize aos-ansible inventory file
     template: 
       src: hosts.j2 
       dest: "{{ aos_ansible_inventory }}"
 
   - name: run aos-ansible
     shell: ansible-playbook -i {{ aos_ansible_inventory }} {{ aos_ansible_path }}/playbooks/aws_install_prep.yml --connection=local
  when: not atomic | default(False) | bool  

- block:
   - name: customize aos-ansible inventory file
     template: 
       src: hosts.j2 
       dest: "{{ aos_ansible_inventory }}"

   - name: run aos-ansible
     shell: ansible-playbook -i {{ aos_ansible_inventory }} {{ aos_ansible_path }}/playbooks/aws_install_prep.yml
  when: atomic | default(False) | bool
  delegate_to: localhost 

- name: add iptables rule for cluster-loader
  iptables: 
    chain: INPUT 
    protocol: tcp 
    match: tcp 
    ctstate: NEW 
    destination_port: 9090 
    jump: ACCEPT

- name: save iptables rules
  shell: iptables-save > /etc/sysconfig/iptables

- name: enable iptables service
  service: 
    name: iptables 
    state: started 
    enabled: yes

- block:
   - name: check if skopeo is installed
     command: which skopeo
     register: skopeo_status

   - name: Install skopeo if not installed
     yum:
       name: skopeo
       state: latest
     when: not atomic | default(False) | bool and skopeo_status.rc != 0

   - name: copy images to container storage
     shell: for image in $(docker images {{ image_repository }}  --format {% raw %} '{{.Repository}}:{{.Tag}}' {% endraw %}); do \
                skopeo copy docker-daemon:$image containers-storage:$image; done
     when: skopeo_status.rc == 0
  when: crio | default(False) | bool and crio_copy_images | default(False) | bool
