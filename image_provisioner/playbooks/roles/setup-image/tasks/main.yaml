---
#- name: ensure local machine has necessary virt packages
#  yum: name=libguestfs-tools-c state=latest
#  become: true

- name: check if image exists
  stat:
    path: "{{ base_image_location }}"
  register: base_image

- name: download base image file
  get_url:
    url: "{{ base_image_url }}"
    dest: "{{ tmp_dir }}"
  when: base_image.stat.exists == False

- name: add empty space to disk image as specified in the inventory
  command: qemu-img resize {{ base_image_location }}  +{{ extend_disk_gb }}G

- block:
  - name: create tmp disk for second partition resize
    command: qemu-img create -f {{ qemu_img_format }} -o preallocation=full {{ qemu_img_location }} {{ (extend_disk_gb+10)|int|abs }}G
  
  - name: resize second partition to use all free space
    command: virt-resize --quiet --expand {{ docker_storage_device }} {{ base_image_location }} {{ qemu_img_location }}

  - name: check if the cloud-init configuration drive already exists
    stat:
      path: /tmp/config.iso
    register: config_drive

  - name: delete the configuration drive if it already exists
    file:
      path: /tmp/config.iso
      state: absent
    when: config_drive.stat.exists == True

  - name: copy cloud-init user-data to tmp directory
    template:
      src: user-data.j2
      dest: /tmp/user-data

  - name: copy cloud-init meta-data to tmp directory
    copy:
      src: meta-data
      dest: /tmp/meta-data

  - name: create the configuration drive
    shell: genisoimage -o /tmp/config.iso -V cidata -r -J /tmp/meta-data /tmp/user-data
  when: atomic | default(False) | bool

- block:
  - name: create tmp disk for first resize pass
    command: qemu-img create -f {{ qemu_img_format }} -o preallocation=full {{ tmp_img_location }} {{ (extend_disk_gb+10)|int|abs }}G

  - name: resize root partition from 6G to 10G
    command: virt-resize --quiet --resize {{ root_partition }}=+4G {{ base_image_location }} {{ tmp_img_location }}
  
  - name: create tmp disk for adding second partition for docker thinpool
    command: qemu-img create -f {{ qemu_img_format }} -o preallocation=full {{ qemu_img_location }} {{ (extend_disk_gb+10+1)|int|abs }}G

  - name: resize second partition to use all free space
    command: virt-resize --quiet --expand {{ docker_storage_device }} {{ tmp_img_location }} {{ qemu_img_location }}
    
  - name: run virt-sysprep, set root password and inject ssh public key
    command:  virt-sysprep -a {{ qemu_img_location }} --root-password password:{{ root_password }} --ssh-inject root:string:"{{ ssh_pub_key }}"

  - name: clean up temp images
    file:
      path: "{{ tmp_img_location }}"
      state: absent
  when: not atomic | default(False) | bool

