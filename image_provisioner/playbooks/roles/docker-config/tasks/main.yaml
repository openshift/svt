---
#- name: set selinux to enforcing
#  selinux:
#    policy: targeted
#    state: enforcing

- block:
  - name: create docker config directory
    file:
      path: /root/.docker
      state: directory
  
  - name: download docker login config.json
    copy:
      src: /root/{{ config_repo }}/image_provisioner/config.json
      dest: /root/.docker/
      remote_src: true
  
  - name: install docker
    yum:
      name: docker
      state: latest
  when: not atomic | default(False) | bool

- name: stop docker service
  systemd:
    name: docker
    state: stopped

- name: reset docker storage
  command: atomic storage reset
  when: atomic | default(False) | bool

- name: check that docker-storage has been deleted
  stat:
    path: /etc/sysconfig/docker-storage
  register: ds_config

- name: delete docker-storage if it still exists
  file:
    path: /etc/sysconfig/docker-storage
    state: absent
  when: ds_config.stat.exists == True

- name: copy docker-storage-setup config
  template:
    src: etc/sysconfig/docker-storage-setup.j2
    dest: /etc/sysconfig/docker-storage-setup
    owner: root
    group: root
    mode: 0644

- block:
   - name: restart machine
     shell: sleep 2 && shutdown -r now "Ansible updates triggered"
     async: 1
     poll: 0
     ignore_errors: true
 
   - name: waiting for server to come back
     become: false
     local_action: wait_for
     args:
       host: "{{ inventory_hostname }}"
       port: 22
       state: started
       delay: 15
       timeout: 600

   - name: query running kernel version
     setup: filter='ansible_kernel'
  
   - name: check if current kernel version is 3.10.0-517 or later
     shell: rpmdev-vercmp {{ ansible_kernel }} 3.10.0-517
     register: vercmp_out
     failed_when: vercmp_out.rc == 12
  when:
    - docker_storage_driver == "overlay2" or update_kernel == "true"
    - not atomic | default(False) | bool

- name: enable docker service and start it
  systemd:
    name: docker
    state: started
    enabled: yes
