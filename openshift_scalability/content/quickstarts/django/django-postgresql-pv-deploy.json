{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
	"name": "django-psql-example",
	"annotations": {
	    "description": "An example Django application with a PostgreSQL database",
	    "source": "https://github.com/openshift/online/blob/master/templates/examples/django-postgresql.json",
	    "tags": "quickstart,python,django,postgresql",
	    "iconClass": "icon-python"
	}
    },
    "labels": {
	"template": "django-psql-example"
    },
    "objects": [
	{
	    "kind": "Service",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "django-psql-example",
		"annotations": {
		    "description": "Exposes and load balances the application pods"
		}
	    },
	    "spec": {
		"ports": [
		    {
			"name": "web",
			"port": 8080,
			"targetPort": 8080
		    }
		],
		"selector": {
		    "name": "django-psql-example"
		}
	    }
	},
	{
	    "kind": "Route",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "django-psql-example"
	    },
	    "spec": {
		"host": "${APPLICATION_DOMAIN}",
		"to": {
		    "kind": "Service",
		    "name": "django-psql-example"
		}
	    }
	},
	{
	    "kind": "DeploymentConfig",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "django-psql-example",
		"annotations": {
		    "description": "Defines how to deploy the application server"
		}
	    },
	    "spec": {
		"strategy": {
		    "type": "Rolling"
		},
		"triggers": [
		    {
			"type": "ImageChange",
			"imageChangeParams": {
			    "automatic": true,
			    "containerNames": [
				"django-psql-example"
			    ],
			    "from": {
				"kind": "ImageStreamTag",
				"name": "django-psql-example:latest",
				"namespace": "openshift"
			    }
			}
		    },
		    {
			"type": "ConfigChange"
		    }
		],
		"replicas": 1,
		"selector": {
		    "name": "django-psql-example"
		},
		"template": {
		    "metadata": {
			"name": "django-psql-example",
			"labels": {
			    "name": "django-psql-example"
			}
		    },
		    "spec": {
			"containers": [
			    {
				"name": "django-psql-example",
				"image": "django-psql-example",
				"ports": [
				    {
					"containerPort": 8080
				    }
				],
				"readinessProbe": {
				    "timeoutSeconds": 3,
				    "initialDelaySeconds": 3,
				    "httpGet": {
					"path": "/health",
					"port": 8080
				    }
				},
				"livenessProbe": {
				    "timeoutSeconds": 3,
				    "initialDelaySeconds": 30,
				    "httpGet": {
					"path": "/health",
					"port": 8080
				    }
				},
				"env": [
				    {
					"name": "DATABASE_SERVICE_NAME",
					"value": "${DATABASE_SERVICE_NAME}"
				    },
				    {
					"name": "DATABASE_ENGINE",
					"value": "${DATABASE_ENGINE}"
				    },
				    {
					"name": "DATABASE_NAME",
					"value": "${DATABASE_NAME}"
				    },
				    {
					"name": "DATABASE_USER",
					"value": "${DATABASE_USER}"
				    },
				    {
					"name": "DATABASE_PASSWORD",
					"value": "${DATABASE_PASSWORD}"
				    },
				    {
					"name": "APP_CONFIG",
					"value": "${APP_CONFIG}"
				    },
				    {
					"name": "DJANGO_SECRET_KEY",
					"value": "${DJANGO_SECRET_KEY}"
				    }
				],
				"resources": {
				    "limits": {
					"memory": "${MEMORY_LIMIT}"
				    }
				}
			    }
			]
		    }
		}
	    }
	},
	{
	    "kind": "PersistentVolumeClaim",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "${DATABASE_SERVICE_NAME}",
	  	"annotations": {
		    "volume.alpha.kubernetes.io/storage-class": "foo"
		}
	    },
	    "spec": {
		"accessModes": [
		    "ReadWriteOnce"
		],
		"resources": {
		    "requests": {
			"storage": "${VOLUME_CAPACITY}"
		    }
		}
	    }
	},
	{
	    "kind": "Service",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "${DATABASE_SERVICE_NAME}",
		"annotations": {
		    "description": "Exposes the database server"
		}
	    },
	    "spec": {
		"ports": [
		    {
			"name": "postgresql",
			"port": 5432,
			"targetPort": 5432
		    }
		],
		"selector": {
		    "name": "${DATABASE_SERVICE_NAME}"
		}
	    }
	},
	{
	    "kind": "DeploymentConfig",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "${DATABASE_SERVICE_NAME}",
		"annotations": {
		    "description": "Defines how to deploy the database"
		}
	    },
	    "spec": {
		"strategy": {
		    "type": "Recreate"
		},
		"triggers": [
		    {
			"type": "ImageChange",
			"imageChangeParams": {
			    "automatic": true,
			    "containerNames": [
				"postgresql"
			    ],
			    "from": {
				"kind": "ImageStreamTag",
				"namespace": "openshift",
				"name": "postgresql:9.4"
			    }
			}
		    },
		    {
			"type": "ConfigChange"
		    }
		],
		"replicas": 1,
		"selector": {
		    "name": "${DATABASE_SERVICE_NAME}"
		},
		"template": {
		    "metadata": {
			"name": "${DATABASE_SERVICE_NAME}",
			"labels": {
			    "name": "${DATABASE_SERVICE_NAME}"
			}
		    },
		    "spec": {
			"containers": [
			    {
				"name": "postgresql",
				"image": "postgresql",
				"ports": [
				    {
					"containerPort": 5432
				    }
				],
				"env": [
				    {
					"name": "POSTGRESQL_USER",
					"value": "${DATABASE_USER}"
				    },
				    {
					"name": "POSTGRESQL_PASSWORD",
					"value": "${DATABASE_PASSWORD}"
				    },
				    {
					"name": "POSTGRESQL_DATABASE",
					"value": "${DATABASE_NAME}"
				    }
				],
				"readinessProbe": {
				    "timeoutSeconds": 1,
				    "initialDelaySeconds": 5,
				    "exec": {
					"command": [ "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'"]
				    }
				},
				"livenessProbe": {
				    "timeoutSeconds": 1,
				    "initialDelaySeconds": 30,
				    "tcpSocket": {
					"port": 5432
				    }
				},
				"resources": {
				    "limits": {
					"memory": "${MEMORY_POSTGRESQL_LIMIT}"
				    }
				},
				"volumeMounts": [
				    {
					"name": "${DATABASE_SERVICE_NAME}-data",
					"mountPath": "/var/lib/pgsql/data"
				    }
				]
			    }
			],
			"volumes": [
			    {
				"name": "${DATABASE_SERVICE_NAME}-data",
				"persistentVolumeClaim": {
				    "claimName": "${DATABASE_SERVICE_NAME}"
				}
			    }
			]
		    }
		}
	    }
	}
    ],
    "parameters": [
	{
	    "name": "MEMORY_LIMIT",
	    "displayName": "Memory Limit",
	    "description": "Maximum amount of memory the Django container can use.",
	    "value": "512Mi"
	},
	{
	    "name": "MEMORY_POSTGRESQL_LIMIT",
	    "displayName": "Memory Limit (PostgreSQL)",
	    "description": "Maximum amount of memory the PostgreSQL container can use.",
	    "value": "512Mi"
	},
	{
	    "name": "VOLUME_CAPACITY",
	    "displayName": "Volume Capacity",
	    "description": "Volume space available for data, e.g. 512Mi, 2Gi",
	    "value": "1Gi",
	    "required": true
	},
	{
	    "name": "APPLICATION_DOMAIN",
	    "displayName": "Application Hostname",
	    "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted.",
	    "value": ""
	},
	{
	    "name": "DATABASE_SERVICE_NAME",
	    "displayName": "Database Service Name",
	    "value": "postgresql"
	},
	{
	    "name": "DATABASE_ENGINE",
	    "displayName": "Database Engine",
	    "description": "Database engine: postgresql, mysql or sqlite (default).",
	    "value": "postgresql"
	},
	{
	    "name": "DATABASE_NAME",
	    "displayName": "Database Name",
	    "value": "default"
	},
	{
	    "name": "DATABASE_USER",
	    "displayName": "Database Username",
	    "value": "django"
	},
	{
	    "name": "DATABASE_PASSWORD",
	    "displayName": "Database User Password",
	    "generate": "expression",
	    "from": "[a-zA-Z0-9]{16}"
	},
	{
	    "name": "APP_CONFIG",
	    "displayName": "Application Configuration File Path",
	    "description": "Relative path to Gunicorn configuration file (optional)."
	},
	{
	    "name": "DJANGO_SECRET_KEY",
	    "displayName": "Djange Secret Key",
	    "description": "Set this to a long random string.",
	    "generate": "expression",
	    "from": "[\\w]{50}"
	},
    {
      "name": "IDENTIFIER",
      "description": "Number to append to the name of resources",
      "value": "1"
    }
    ]
}
