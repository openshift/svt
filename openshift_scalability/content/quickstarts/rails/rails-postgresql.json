{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
	"name": "rails-postgresql-example",
	"annotations": {
	    "description": "An example Rails application with a PostgreSQL database",
	    "source": "https://github.com/openshift/online/blob/master/templates/examples/rails-postgresql.json",
	    "tags": "quickstart,ruby,rails,postgresql",
	    "iconClass": "icon-ruby"
	}
    },
    "labels": {
	"template": "rails-postgresql-example"
    },
    "objects": [
	{
	    "kind": "Service",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "rails-postgresql-example",
		"annotations": {
		    "description": "Exposes and load balances the application pods"
		}
	    },
	    "spec": {
		"ports": [
		    {
			"name": "web",
			"port": 8080,
			"targetPort": 8080
		    }
		],
		"selector": {
		    "name": "rails-postgresql-example"
		}
	    }
	},
	{
	    "kind": "Route",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "rails-postgresql-example"
	    },
	    "spec": {
		"host": "${APPLICATION_DOMAIN}",
		"to": {
		    "kind": "Service",
		    "name": "rails-postgresql-example"
		}
	    }
	},
	{
	    "kind": "ImageStream",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "rails-postgresql-example",
		"annotations": {
		    "description": "Keeps track of changes in the application image"
		}
	    }
	},
	{
	    "kind": "BuildConfig",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "rails-postgresql-example",
		"annotations": {
		    "description": "Defines how to build the application"
		}
	    },
	    "spec": {
		"source": {
		    "type": "Git",
		    "git": {
			"uri": "${SOURCE_REPOSITORY_URL}",
			"ref": "${SOURCE_REPOSITORY_REF}"
		    },
		    "contextDir": "${CONTEXT_DIR}"
		},
		"strategy": {
		    "type": "Source",
		    "sourceStrategy": {
			"from": {
			    "kind": "ImageStreamTag",
			    "namespace": "openshift",
			    "name": "ruby:2.3"
			}
		    }
		},
		"output": {
		    "to": {
			"kind": "ImageStreamTag",
			"name": "rails-postgresql-example:latest"
		    }
		},
		"triggers": [
		    {
			"type": "ImageChange"
		    },
		    {
			"type": "ConfigChange"
		    },
		    {
			"type": "GitHub",
			"github": {
			    "secret": "${GITHUB_WEBHOOK_SECRET}"
			}
		    }
		],
		"postCommit": {
		    "script": "bundle exec rake test"
		}
	    }
	},
	{
	    "kind": "DeploymentConfig",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "rails-postgresql-example",
		"annotations": {
		    "description": "Defines how to deploy the application server"
		}
	    },
	    "spec": {
		"strategy": {
		    "type": "Recreate",
		    "recreateParams": {
			"pre": {
			    "failurePolicy": "Abort",
			    "execNewPod": {
				"command": [
				    "./migrate-database.sh"
				],
				"containerName": "rails-postgresql-example"
			    }
			}
		    }
		},
		"triggers": [
		    {
			"type": "ImageChange",
			"imageChangeParams": {
			    "automatic": true,
			    "containerNames": [
				"rails-postgresql-example"
			    ],
			    "from": {
				"kind": "ImageStreamTag",
				"name": "rails-postgresql-example:latest"
			    }
			}
		    },
		    {
			"type": "ConfigChange"
		    }
		],
		"replicas": 1,
		"selector": {
		    "name": "rails-postgresql-example"
		},
		"template": {
		    "metadata": {
			"name": "rails-postgresql-example",
			"labels": {
			    "name": "rails-postgresql-example"
			}
		    },
		    "spec": {
			"containers": [
			    {
				"name": "rails-postgresql-example",
				"image": "rails-postgresql-example",
				"ports": [
				    {
					"containerPort": 8080
				    }
				],
				"readinessProbe": {
				    "timeoutSeconds": 3,
				    "initialDelaySeconds": 5,
				    "httpGet": {
					"path": "/articles",
					"port": 8080
				    }
				},
				"livenessProbe": {
				    "timeoutSeconds": 3,
				    "initialDelaySeconds": 10,
				    "httpGet": {
					"path": "/articles",
					"port": 8080
				    }
				},
				"env": [
				    {
					"name": "DATABASE_SERVICE_NAME",
					"value": "${DATABASE_SERVICE_NAME}"
				    },
				    {
					"name": "POSTGRESQL_USER",
					"value": "${DATABASE_USER}"
				    },
				    {
					"name": "POSTGRESQL_PASSWORD",
					"value": "${DATABASE_PASSWORD}"
				    },
				    {
					"name": "POSTGRESQL_DATABASE",
					"value": "${DATABASE_NAME}"
				    },
				    {
					"name": "SECRET_KEY_BASE",
					"value": "${SECRET_KEY_BASE}"
				    },
				    {
					"name": "POSTGRESQL_MAX_CONNECTIONS",
					"value": "${POSTGRESQL_MAX_CONNECTIONS}"
				    },
				    {
					"name": "POSTGRESQL_SHARED_BUFFERS",
					"value": "${POSTGRESQL_SHARED_BUFFERS}"
				    },
				    {
					"name": "APPLICATION_DOMAIN",
					"value": "${APPLICATION_DOMAIN}"
				    },
				    {
					"name": "APPLICATION_USER",
					"value": "${APPLICATION_USER}"
				    },
				    {
					"name": "APPLICATION_PASSWORD",
					"value": "${APPLICATION_PASSWORD}"
				    },
				    {
					"name": "RAILS_ENV",
					"value": "${RAILS_ENV}"
				    }
				],
				"resources": {
				    "limits": {
					"memory": "${MEMORY_LIMIT}"
				    }
				}
			    }
			]
		    }
		}
	    }
	},
	{
	    "kind": "Service",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "${DATABASE_SERVICE_NAME}",
		"annotations": {
		    "description": "Exposes the database server"
		}
	    },
	    "spec": {
		"ports": [
		    {
			"name": "postgresql",
			"port": 5432,
			"targetPort": 5432
		    }
		],
		"selector": {
		    "name": "${DATABASE_SERVICE_NAME}"
		}
	    }
	},
	{
	    "kind": "DeploymentConfig",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "${DATABASE_SERVICE_NAME}",
		"annotations": {
		    "description": "Defines how to deploy the database"
		}
	    },
	    "spec": {
		"strategy": {
		    "type": "Recreate"
		},
		"triggers": [
		    {
			"type": "ImageChange",
			"imageChangeParams": {
			    "automatic": true,
			    "containerNames": [
				"postgresql"
			    ],
			    "from": {
				"kind": "ImageStreamTag",
				"namespace": "openshift",
				"name": "postgresql:9.5"
			    }
			}
		    },
		    {
			"type": "ConfigChange"
		    }
		],
		"replicas": 1,
		"selector": {
		    "name": "${DATABASE_SERVICE_NAME}"
		},
		"template": {
		    "metadata": {
			"name": "${DATABASE_SERVICE_NAME}",
			"labels": {
			    "name": "${DATABASE_SERVICE_NAME}"
			}
		    },
		    "spec": {
			"containers": [
			    {
				"name": "postgresql",
				"image": "postgresql",
				"ports": [
				    {
					"containerPort": 5432
				    }
				],
				"readinessProbe": {
				    "timeoutSeconds": 1,
				    "initialDelaySeconds": 5,
				    "exec": {
					"command": [ "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'"]
				    }
				},
				"livenessProbe": {
				    "timeoutSeconds": 1,
				    "initialDelaySeconds": 30,
				    "tcpSocket": {
					"port": 5432
				    }
				},
				"env": [
				    {
					"name": "POSTGRESQL_USER",
					"value": "${DATABASE_USER}"
				    },
				    {
					"name": "POSTGRESQL_PASSWORD",
					"value": "${DATABASE_PASSWORD}"
				    },
				    {
					"name": "POSTGRESQL_DATABASE",
					"value": "${DATABASE_NAME}"
				    },
				    {
					"name": "POSTGRESQL_MAX_CONNECTIONS",
					"value": "${POSTGRESQL_MAX_CONNECTIONS}"
				    },
				    {
					"name": "POSTGRESQL_SHARED_BUFFERS",
					"value": "${POSTGRESQL_SHARED_BUFFERS}"
				    }
				],
				"resources": {
				    "limits": {
					"memory": "${MEMORY_POSTGRESQL_LIMIT}"
				    }
				},
				"volumeMounts": [
				    {
					"name": "data",
					"mountPath": "/var/lib/pgsql/data"
				    }
				]
			    }
			],
			"volumes": [
			    {
				"name": "data",
				"emptyDir": {}
			    }
			]
		    }
		}
	    }
	}
    ],
    "parameters": [
	{
	    "name": "MEMORY_LIMIT",
	    "displayName": "Memory Limit",
	    "description": "Maximum amount of memory the Rails container can use.",
	    "value": "512Mi"
	},
	{
	    "name": "MEMORY_POSTGRESQL_LIMIT",
	    "displayName": "Memory Limit (PostgreSQL)",
	    "description": "Maximum amount of memory the PostgreSQL container can use.",
	    "value": "512Mi"
	},
	{
	    "name": "SOURCE_REPOSITORY_URL",
	    "displayName": "Git Repository URL",
	    "description": "The URL of the repository with your application source code.",
	    "value": "https://github.com/openshift/rails-ex.git"
	},
	{
	    "name": "SOURCE_REPOSITORY_REF",
	    "displayName": "Git Reference",
	    "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
	},
	{
	    "name": "CONTEXT_DIR",
	    "displayName": "Context Directory",
	    "description": "Set this to the relative path to your project if it is not in the root of your repository."
	},
	{
	    "name": "APPLICATION_DOMAIN",
	    "displayName": "Application Hostname",
	    "description": "The exposed hostname that will route to the Rails service, if left blank a value will be defaulted.",
	    "value": ""
	},
	{
	    "name": "GITHUB_WEBHOOK_SECRET",
	    "displayName": "GitHub Webhook Secret",
	    "description": "A secret string used to configure the GitHub webhook.",
	    "generate": "expression",
	    "from": "[a-zA-Z0-9]{40}"
	},
	{
	    "name": "SECRET_KEY_BASE",
	    "displayName": "Secret Key",
	    "description": "Your secret key for verifying the integrity of signed cookies.",
	    "generate": "expression",
	    "from": "[a-z0-9]{127}"
	},
	{
	    "name": "APPLICATION_USER",
	    "displayName": "Application Username",
	    "description": "The application user that is used within the sample application to authorize access on pages.",
	    "value": "openshift"
	},
	{
	    "name": "APPLICATION_PASSWORD",
	    "displayName": "Application Password",
	    "description": "The application password that is used within the sample application to authorize access on pages.",
	    "value": "secret"
	},
	{
	    "name": "RAILS_ENV",
	    "displayName": "Rails Environment",
	    "description": "Environment under which the sample application will run. Could be set to production, development or test.",
	    "value": "production"
	},
	{
	    "name": "DATABASE_SERVICE_NAME",
	    "displayName": "Database Service Name",
	    "value": "postgresql"
	},
	{
	    "name": "DATABASE_USER",
	    "displayName": "Database Username",
	    "generate": "expression",
	    "from": "user[A-Z0-9]{3}"
	},
	{
	    "name": "DATABASE_PASSWORD",
	    "displayName": "Database Password",
	    "generate": "expression",
	    "from": "[a-zA-Z0-9]{8}"
	},
	{
	    "name": "DATABASE_NAME",
	    "displayName": "Database Name",
	    "value": "root"
	},
	{
	    "name": "POSTGRESQL_MAX_CONNECTIONS",
	    "displayName": "Maximum Database Connections",
	    "value": "100"
	},
	{
	    "name": "POSTGRESQL_SHARED_BUFFERS",
	    "displayName": "Shared Buffer Amount",
	    "value": "12MB"
	},
    {
      "name": "IDENTIFIER",
      "description": "Number to append to the name of resources",
      "value": "1"
    }
    ]
}
