reliability:
  kubeconfig: <path_to_kubeconfig>
  timeSubstitutions:
    minute: 10s
    hour: 30s
    day: 2m
    week: 3m
    month: 4m
  limits:
    # total number of projects to create
    # for 3 nodes m5.xlarge cluster, 25 to 30 is recomended
    # for 5 nodes m5.xlarge cluster, 60 is recomended
    maxProjects: 25
    sleepTime: 10

  cerberusIntegration:
    # start cerberus https://github.com/cloud-bulldozer/cerberus before starting reliabiity test.
    cerberus_enable: False
    # if cerberus_enable is false, the following 2 items are ignored.
    cerberus_api: "http://0.0.0.0:8080"
    # action to take when cerberus status is False, valid data: pause/halt/continue
    cerberus_fail_action: pause
  
  slackIntegration:
    slack_enable: False
    # the ID in the example is the id of slack channel #ocp-qe-reliability-monitoring.
    slack_channel: C0266JJ4XM5
    # slack_member is optional. If provided, the notification message will @ you. 
    # you must be a member of the slack channel to receive the notification.
    slack_member: <Your slack member id>

    krakenIntegration:
    kraken_enable: False
    # supported Kraken scenarios: https://github.com/cloud-bulldozer/kraken-hub/blob/main/README.md#supported-chaos-scenarios
    # pod-scenarios, container-scenarios, node-scenarios, zone-outages, time-scenarios, 
    # node-cpu-hog, node-memory-hog, node-io-hog
    # Please specify the parameters for each scenario. e.g. For pod-scenarios,
    # refer to https://github.com/cloud-bulldozer/kraken-hub/blob/main/docs/pod-scenarios.md#supported-parameters
    kraken_scenarios: 
      - name: pod-scenarios_etcd
        scenario: "pod-scenarios"
        interval_unit: minutes # weeks,days,hours,minutes,seconds
        interval_number: 8
        # start_date: "2021-10-28 17:36:00" # Optional. format: 2021-10-20 10:00:00.
        # end_date: "2021-10-28 17:50:00" # Optional.
        # timezone: "Asia/Shanghai" # Optional. e.g. US/Eastern. Default is "UTC
      - name: pod-scenarios_monitoring
        scenario: "pod-scenarios"
        interval_unit: minutes
        interval_number: 10
        parameters:
          NAMESPACE: openshift-monitoring
          POD_LABEL: app.kubernetes.io/component=prometheus
          EXPECTED_POD_COUNT: 2
      # - ode-scenarios_workerstopstart
      #   scenario: "node-scenarios"
      #   interval_unit: minutes
      #   interval_number: 15
      #   parameters:
      #     AWS_DEFAULT_REGION: us-east-2
      #     AWS_ACCESS_KEY_ID: xxxx
      #     AWS_SECRET_ACCESS_KEY: xxxx

  appTemplates:
    - template: cakephp-mysql-persistent
    - template: nodejs-postgresql-persistent
    - template: django-psql-persistent
    - template: rails-pgsql-persistent
    - template: dancer-mysql-persistent

  users:
    - kubeadmin_password: <path_to_kubeadmin-password>
    - user_file: <path_to_users.spec>
  tasks:
    minute:
      # Specify an oc command to execute as 'action'.
      # Don't use command that could return '1' as expected, e.g. oc get pods -A | egrep -v "Running|Completed".
      # Use oc get pods -A | awk '$4!="Running" && $4!="Completed"' instead.
      - action: oc whoami
        resource: customize
        persona: developer
        concurrency: 5
      # Specify a file to execute as 'action'.
      # File contains lines of oc command to execute. Don't use command that could return '1' as expected.
      # - action: <path to file>
      #   resource: customize
      #   persona: admin
      #   concurrency: 1
      - action: check
        resource: pods
        persona: admin
        concurrency: 1
      - action: check
        resource: projects
        persona: developer
        concurrency: 5
    hour:
      - action: check
        resource: projects
        persona: developer
        concurrency: 5
      - action: create
        resource: projects
        quantity: 2
        persona: developer
        concurrency: 5
      - action: visit
        resource: apps
        applyPercent: 100
        persona: user
        concurrency: 10
      - action: scaleUp
        resource: apps
        applyPercent: 50
        persona: developer
        concurrency: 3
      - action: scaleDown
        resource: apps
        applyPercent: 50
        persona: developer
        concurrency: 1
      - action: build
        resource: apps
        applyPercent: 33
        persona: developer
        concurrency: 2
      - action: modify
        resource: projects
        applyPercent: 25
        persona: developer
        concurrency: 2
      - action: clusteroperators
        resource: monitor
    week:
      - action: delete
        resource: projects
        applyPercent: 33
        persona: developer
        concurrency: 5
      - action: login
        resource: session
        persona: developer
        concurrency: 5
