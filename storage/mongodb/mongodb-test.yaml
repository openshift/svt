---
- hosts: all
  vars_files:
    - external_vars.yaml
  tasks:
  - name: print hostname
    debug:
      msg: "hostname: {{ inventory_hostname }} and test_project_name: {{ test_project_name }}"
    tags:
      - setup

  - name: clean tmp folder
    file:
      state: absent
      path: "{{ tmp_folder }}/"
    tags:
      - setup

  - name: copy files to remote
    copy:
      src: files
      dest: "{{ tmp_folder }}"
    tags:
      - setup

  - block:
    - name: list all scripts
      find:
        paths: "{{ tmp_folder }}/files/scripts"
        patterns: "*.sh"
      register: tmp_script_glob

    - name: make scripts executable
      file:
        path: "{{ item.path }}"
        mode: 0744
      with_items:
        - "{{ tmp_script_glob.files }}"
    tags:
      - setup

  ### could use our cluster-loader here, but ... :) we need to
  ### dockerize cluster loader;
  ### cl has a functionality that check all created objects is in the desired state
  - name: create oc objects
    shell: "{{ tmp_folder }}/files/scripts/create-oc-objects.sh {{ test_project_name }} {{ test_project_number }} {{ tmp_folder }} {{ delete_test_project_before_test }} {{ MEMORY_LIMIT }} {{ MONGODB_USER }} {{ MONGODB_PASSWORD }} {{ MONGODB_DATABASE }} {{ VOLUME_CAPACITY }} {{ MONGODB_VERSION }} {{ STORAGE_CLASS_NAME }}"
    tags:
      - setup

  ### TODO check out how git test handles
  ### 1. registration of the jump node
  ### 2. labelling of remote nodes
  - name: register pbench
    shell: |
      pbench-kill-tools
      pbench-clear-tools
      pbench-clear-results
      pbench-register-tool-set
      pbench-register-tool --name=oc

      NODES=($(oc get node  --no-headers | grep -v master | awk '{print $1}'))

      for node in "${NODES[@]}"
      do
        pbench-register-tool-set --remote="${node}"
      done
    when: pbench_registration|bool == true
    tags:
      - run

  - name: run-load the benchmarks
    command: pbench-user-benchmark --sysinfo=none --config="load_mongodb_ycsb_projects_{{ test_project_number }}_{{ STORAGE_CLASS_NAME }}_{{ workload }}_{{ MEMORY_LIMIT }}_recordcount_{{ recordcount }}_operationcount_{{ operationcount }}_{{ distribution }}_threads_{{ ycsb_threads }}" -- "{{ tmp_folder }}/files/scripts/test-mongo-m-load.sh" "{{ test_project_name }}" "{{ test_project_number }}" "{{ iteration }}" "{{ ycsb_threads }}" "{{ workload }}" "{{ recordcount }}" "{{ operationcount }}"  "{{ distribution }}" 
    tags:
      - run

  - name: run the benchmark 
    command: pbench-user-benchmark --sysinfo=none --config="run_mongodb_ycsb_projects_{{ test_project_number }}_{{ STORAGE_CLASS_NAME }}_{{ workload }}_{{ MEMORY_LIMIT }}_recordcount_{{ recordcount }}_operationcount_{{ operationcount }}_{{ distribution }}_threads_{{ ycsb_threads }}" -- "{{ tmp_folder }}/files/scripts/test-mongo-m-run.sh" "{{ test_project_name }}" "{{ test_project_number }}" "{{ iteration }}" "{{ ycsb_threads }}" "{{ workload }}" "{{ recordcount }}" "{{ operationcount }}"  "{{ distribution }}"
    tags:
      - run

  - name: pbench copy results
    command: pbench-copy-results
    when: pbench_copy_result|bool == true
    tags:
      - run
