---
- hosts: localhost
  vars:
    result_directory: /root/results/
  tasks:
    - name: Clone existing result repo
      git:
        repo: 'https://{{ github_token }}@github.com/redhat-performance/scale-ci-results'
        dest: "{{ result_directory }}"
        version: "{{ git_test_branch }}"
      register: clone_result
      ignore_errors: true

    - name: Create new branch
      shell: |
        cd {{ result_directory }}
        git checkout master
        git checkout -b {{ git_test_branch }}
      when: clone_result.rc is defined and clone_result.rc == 1

    - block:
      - name: Get last file
        shell: cd {{ result_directory }}; git diff-tree --no-commit-id --name-only -r HEAD
        register: old_file

      - name: Run R2R
        command: pbcompare -old {{ result_directory }}{{ old_file.stdout }} -new {{ new_file }}
        register: command_result
        failed_when: command_result.rc != 0
      when: clone_result.rc is not defined

    - name: Move good result to repo
      shell: jq . {{ new_file }} > {{ result_directory }}/out-{{ ansible_date_time.iso8601_basic }}.json

    - name: Commit new file if good R2R result
      shell: |
        cd {{ result_directory }}
        git config user.name "Pipeline bot"
        git config user.email sejug@redhat.com
        git add .
        git commit -am "new result"
        git push -u origin HEAD
